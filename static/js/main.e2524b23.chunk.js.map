{"version":3,"sources":["components/timer.js","components/darkmode.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","updateCount","state","time","minutes","Math","floor","seconds","document","getElementById","innerHTML","setState","style","color","breakTime","restart","startingMinutes","boolean","startingBreak","clearInterval","intervalId","start","setInterval","pause","console","log","sessionArrowUp","sessionArrowDown","breakArrowDown","breakArrowUp","undefined","this","checked","Provider","value","size","className","onClick","id","Component","Darkmode","checkboxclick","cssText","type","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e2524b23.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from \"react-icons/ai\";\r\nimport { TiMediaPause} from \"react-icons/ti\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {VscDebugStart ,VscDebugRestart} from \"react-icons/vsc\";\r\nimport \"./css/timer.css\";\r\n\r\n\r\nexport default class Timer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            startingMinutes:10,\r\n            time:undefined,\r\n            intervalId:undefined,\r\n            boolean:true,\r\n            startingBreak:10,\r\n            breakTime:undefined,\r\n\r\n        }\r\n    }\r\n    \r\n    updateCount=()=>{\r\n        if(this.state.time>=0){\r\n            const minutes=Math.floor(this.state.time/60);\r\n            const seconds=this.state.time%60;\r\n            document.getElementById(\"count\").innerHTML=`${minutes}:${seconds}`;\r\n            this.setState({\r\n                time:this.state.time-1\r\n            })\r\n            if(this.state.time<60 &&this.state.time>0){\r\n                document.getElementById(\"container_2\").style.color=\"red\";\r\n            }\r\n        }\r\n        else{\r\n            document.getElementById(\"caption\").innerHTML=\"Break\"\r\n            document.getElementById(\"container_2\").style.color=\"black\";\r\n            if(this.state.breakTime>=0){\r\n                const seconds=this.state.breakTime%60;\r\n                const minutes=Math.floor(this.state.breakTime/60);\r\n                document.getElementById(\"count\").innerHTML=`${minutes}:${seconds}`;\r\n                this.setState({\r\n                breakTime:this.state.breakTime-1\r\n                })\r\n            }\r\n        }\r\n    } \r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            time:this.state.startingMinutes*60,\r\n            breakTime:this.state.startingBreak*60\r\n        })\r\n        console.log(document.getElementById(\"checkbox\").checked);\r\n    }\r\n       \r\n    \r\n    restart=()=>{\r\n        this.setState({\r\n            time:this.state.startingMinutes*60,\r\n            boolean:true,\r\n            breakTime:this.state.startingBreak*60\r\n        })\r\n        clearInterval(this.state.intervalId);\r\n        document.getElementById(\"container_2\").style.color=\"black\";\r\n        document.getElementById(\"caption\").innerHTML=\"Session\"\r\n        document.getElementById(\"count\").innerHTML=`${this.state.startingMinutes}:00`\r\n    }\r\n    start=()=>{\r\n        if(this.state.boolean===true){\r\n            let intervalId = setInterval(this.updateCount, 1000)\r\n            this.setState({ intervalId: intervalId,boolean:false })\r\n        }\r\n          \r\n    }\r\n    pause=()=>{\r\n        clearInterval(this.state.intervalId);\r\n        this.setState({boolean:true})\r\n        console.log(\"gio\");\r\n    }\r\n\r\n    sessionArrowUp=()=>{\r\n        \r\n        if(this.state.boolean===true){\r\n            this.setState({\r\n                startingMinutes:this.state.startingMinutes+1,\r\n                time:this.state.time+60\r\n            })\r\n            document.getElementById(\"count\").innerHTML=`${this.state.startingMinutes+1}:00`\r\n        }\r\n    }\r\n\r\n    sessionArrowDown=()=>{\r\n        if(this.state.startingMinutes>1){\r\n            if(this.state.boolean===true){\r\n                this.setState({\r\n                    startingMinutes:this.state.startingMinutes-1,\r\n                    time:this.state.time-60\r\n                })\r\n                document.getElementById(\"count\").innerHTML=`${this.state.startingMinutes-1}:00`\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    breakArrowDown=()=>{\r\n        \r\n        if(this.state.startingBreak>1){\r\n            if(this.state.boolean===true){\r\n                this.setState({\r\n                    startingBreak:this.state.startingBreak-1,\r\n                    breakTime:this.state.breakTime-60\r\n                })\r\n                \r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    breakArrowUp=()=>{\r\n        if(this.state.boolean===true){\r\n            this.setState({\r\n                startingBreak:this.state.startingBreak+1,\r\n                breakTime:this.state.breakTime+60\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        var x=this.state.startingMinutes;\r\n        return(\r\n            \r\n            <IconContext.Provider value={{size:\"1em\"}}>\r\n            <div className=\"timer\">\r\n                <div className=\"container_1\" >\r\n                    <div className=\"break\" >\r\n                        <p>Break Length</p>\r\n                        <AiOutlineArrowUp  className=\"icon\" onClick={this.breakArrowUp} />\r\n                        <span>{this.state.startingBreak}</span>\r\n                        <AiOutlineArrowDown className=\"icon\" onClick={this.breakArrowDown} />\r\n                    </div>\r\n                    <div className=\"session\" >\r\n                        <p>Session Length</p>\r\n                        <AiOutlineArrowUp className=\"icon\" onClick={this.sessionArrowUp} />\r\n                        <span>{this.state.startingMinutes}</span>\r\n                        <AiOutlineArrowDown className=\"icon\" onClick={this.sessionArrowDown} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"container_2\" id=\"container_2\" >\r\n                    <p id=\"caption\" >Session</p>\r\n                    <div className=\"count\" id=\"count\" >\r\n                        {this.state.startingMinutes}:00\r\n                    </div>\r\n                </div>\r\n                <div className=\"icons\" >\r\n                    <TiMediaPause className=\"icon displayicon\" onClick={this.pause} />\r\n                    <VscDebugStart className=\"icon displayicon\"  onClick={this.start} />\r\n                    <VscDebugRestart className=\"icon displayicon\" onClick={this.restart} />\r\n                </div>\r\n\r\n            </div>\r\n            </IconContext.Provider>\r\n        );\r\n    }\r\n}","import React,{Component} from \"react\";\r\nimport { BiSun,BiMoon} from \"react-icons/bi\";\r\nimport \"./css/darkmode.css\"\r\n\r\nexport default class Darkmode extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            boolean:false\r\n        }\r\n    }\r\n    checkboxclick=()=>{\r\n        switch(this.state.boolean){\r\n            case true:{\r\n                document.getElementById(\"App\").style.cssText=\"background-color:rgb(190, 190, 253); color:black\"\r\n                document.getElementById(\"container_2\").style.cssText=\"border: black solid 2px;\"\r\n                this.setState({\r\n                    boolean:false\r\n                });\r\n                break;\r\n            }\r\n            case false:{\r\n                document.getElementById(\"App\").style.cssText=\"background-color:rgba(5, 5, 5, 0.986); color:white\"\r\n                document.getElementById(\"container_2\").style.cssText=\"border: white solid 2px;\"\r\n                this.setState({\r\n                    boolean:true\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        return(   \r\n      <div className=\"darkmode_button\" >\r\n            <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" onClick={this.checkboxclick} />\r\n            <label htmlFor=\"checkbox\" className=\"label\" >\r\n                <BiSun className=\"icon_1\"/> \r\n                <BiMoon className=\"icon_2\"/>\r\n                <div className=\"ball\"></div>\r\n            </label>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport Timer from \"./components/timer\";\nimport Darkmode from \"./components/darkmode\";\nfunction App() {\n  return (\n    <div className=\"App\" id=\"App\" >\n      <p className=\"caption\" >Timer with Break</p>\n      <Darkmode />\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}